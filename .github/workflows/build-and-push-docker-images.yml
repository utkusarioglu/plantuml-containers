name: Build and push Docker images

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - .github/workflows/build-and-push-docker-images.yml
  workflow_dispatch:

env:
  CACHE_TO_DEST: /tmp/.buildx-cache-new
  CACHE_FROM_SRC: /tmp/.buildx-cache

jobs:
  build-and-push-docker-images:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        images:
          - dockerfile: src/Dockerfile.dev
            containerName: plantuml-devcontainer
            containerTag: 1.0.0
            username: plantuml
            additionalFilesToWatch: src/**

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v25
        with:
          files: |
            ${{ matrix.images.additionalFilesToWatch }}

      - name: Declare run state
        id: run_state
        run: |
          if [ ${{ steps.changed_files.outputs.any_modified }} == true ] || \
            [ ${{ github.event_name }} == workflow_dispatch ];
          then
            echo "::set-output name=run_docker_build::true"
            echo "::debug::Docker build will carry out as expected."
          else
            echo "::set-output name=run_docker_build::false"
            echo "::debug::Docker build is cancelled as none of the watched files have been changed."
            echo "Docker build is cancelled as none of the watched files have been changed."
          fi

      - name: Set up Docker Buildx
        if: steps.run_state.outputs.run_docker_build == 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: steps.changed-files.outputs.any_modified == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.images.containerName }}:${{ matrix.images.containerTag }}
        if: steps.run_state.outputs.run_docker_build == 'true'
        uses: docker/build-push-action@v2
        id: docker-build
        with:
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.images.containerName }}:${{ matrix.images.containerTag }}
          file: ${{ matrix.images.dockerfile }}
          push: ${{ github.ref == 'refs/heads/main' }}
          cache-from: type=local,src=${{ env.CACHE_FROM_SRC }}
          cache-to: type=local,mode=max,dest=${{ env.CACHE_TO_DEST }}
          build-args: |
            ROOT_PASS=${{ secrets.DOCKER_IMAGE_ROOT_PASS }}
            USERNAME=${{ matrix.images.username }}

      - name: Image digest
        if: steps.run_state.outputs.run_docker_build == 'true'
        run: echo ${{ steps.docker-build.outputs.digest }}

      - name: Move cache
        # if: steps.changed-files.outputs.any_modified == 'true'
        run: |
          rm -rf ${{ env.CACHE_FROM_SRC }}
          if [ -d ${{ env.CACHE_FROM_SRC }} ];
          then
            mv ${{ env.CACHE_TO_DEST }} ${{ env.CACHE_FROM_SRC }}
          fi
